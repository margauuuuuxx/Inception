secrets:
  mysql_root_password:
    file: ../secrets/mysql_root_password.txt
  mysql_user_password:
    file: ../secrets/mysql_user_password.txt
  wp_admin_password:
    file: ../secrets/wp_admin_password
  wp_user_password:
    file: ../secrets/wp_user_password

services:
  mariadb:
    build: requirements/mariadb
    container_name: mariadb
    env_file: .env
    secrets:
      - mysql_root_password
      - mysql_user_password
    volumes:
      - /home/marlonco/data/mariadb_data:/var/lib/mysql
    networks:
      - inception
    restart: always

  wordpress: 
    build: 
      context: ./requirements
      dockerfile: wordpress/Dockerfile 
    container_name: wordpress
    env_file: .env
    secrets:
      - mysql_root_password
      - mysql_user_password
      - wp_admin_password
      - wp_user_password
    depends_on:
      - mariadb # wordpress needs a database to function 
    volumes:
      - /home/marlonco/data/wordpress_data:/var/www/html
    networks:
      - inception
    restart: always 

  nginx:
    build:
      context: ./requirements
      dockerfile: nginx/Dockerfile
    container_name: nginx
    env_file: .env
    depends_on:
      - wordpress # nginx proxies a request to wordpress: if no wordpress then no receiver for the request
    ports:
      - "443:443" # expose port 443 from the container to port 443 on the host (443 is for HTTPS)
    volumes:
      - /home/marlonco/data/wordpress_data:/var/www/html
    networks:
      - inception
    restart: always 

networks:
  inception:
    driver: bridge #creating a custom network using the bridge driver (= default docker network type, isolated from the rest)
